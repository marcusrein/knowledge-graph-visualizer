/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "greetingSetter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newGreeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "premium",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "GreetingChange",
    type: "event",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "premium",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newGreeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userGreetingCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526040518060400160405280601c81526020017f4275696c64696e6720556e73746f707061626c65204170707321212100000000815250600090816200004a919062000353565b506000600160006101000a81548160ff02191690831515021790555060006002553480156200007857600080fd5b50604051620013d6380380620013d683398181016040528101906200009e9190620004a4565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620004d6565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200015b57607f821691505b60208210810362000171576200017062000113565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200019c565b620001e786836200019c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002346200022e6200022884620001ff565b62000209565b620001ff565b9050919050565b6000819050919050565b620002508362000213565b620002686200025f826200023b565b848454620001a9565b825550505050565b600090565b6200027f62000270565b6200028c81848462000245565b505050565b5b81811015620002b457620002a860008262000275565b60018101905062000292565b5050565b601f8211156200030357620002cd8162000177565b620002d8846200018c565b81016020851015620002e8578190505b62000300620002f7856200018c565b83018262000291565b50505b505050565b600082821c905092915050565b6000620003286000198460080262000308565b1980831691505092915050565b600062000343838362000315565b9150826002028217905092915050565b6200035e82620000d9565b67ffffffffffffffff8111156200037a5762000379620000e4565b5b62000386825462000142565b62000393828285620002b8565b600060209050601f831160018114620003cb5760008415620003b6578287015190505b620003c2858262000335565b86555062000432565b601f198416620003db8662000177565b60005b828110156200040557848901518255600182019150602085019450602081019050620003de565b8683101562000425578489015162000421601f89168262000315565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200046c826200043f565b9050919050565b6200047e816200045f565b81146200048a57600080fd5b50565b6000815190506200049e8162000473565b92915050565b600060208284031215620004bd57620004bc6200043a565b5b6000620004cd848285016200048d565b91505092915050565b608051610ed6620005006000396000818161019e0152818161022e01526102fb0152610ed66000f3fe6080604052600436106100745760003560e01c8063a41368621161004e578063a4136862146100ed578063cea49c3c14610109578063e0a73a9314610146578063ef690cc0146101715761007b565b80633ccfd60b146100805780638da5cb5b1461009757806397feba9d146100c25761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b5061009561019c565b005b3480156100a357600080fd5b506100ac6102f9565b6040516100b9919061064c565b60405180910390f35b3480156100ce57600080fd5b506100d761031d565b6040516100e49190610680565b60405180910390f35b610107600480360381019061010291906107f5565b610323565b005b34801561011557600080fd5b50610130600480360381019061012b919061086a565b610463565b60405161013d9190610680565b60405180910390f35b34801561015257600080fd5b5061015b61047b565b60405161016891906108b2565b60405180910390f35b34801561017d57600080fd5b5061018661048e565b604051610193919061094c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610221906109ba565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161027090610a0b565b60006040518083038185875af1925050503d80600081146102ad576040519150601f19603f3d011682016040523d82523d6000602084013e6102b2565b606091505b50509050806102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90610a6c565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b610346604051806060016040528060218152602001610e8060219139823361051c565b80600090816103559190610c98565b506001600260008282546103699190610d99565b925050819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c09190610d99565b9250508190555060003411156103ef5760018060006101000a81548160ff02191690831515021790555061040b565b6000600160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff167f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad82600034113460405161045893929190610dcd565b60405180910390a250565b60036020528060005260406000206000915090505481565b600160009054906101000a900460ff1681565b6000805461049b90610abb565b80601f01602080910402602001604051908101604052809291908181526020018280546104c790610abb565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b505050505081565b6105b683838360405160240161053493929190610e0b565b6040516020818303038152906040527f95ed0195000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105bb565b505050565b6105d2816105ca6105d56105f6565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610601819050919050565b610609610e50565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106368261060b565b9050919050565b6106468161062b565b82525050565b6000602082019050610661600083018461063d565b92915050565b6000819050919050565b61067a81610667565b82525050565b60006020820190506106956000830184610671565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610702826106b9565b810181811067ffffffffffffffff82111715610721576107206106ca565b5b80604052505050565b600061073461069b565b905061074082826106f9565b919050565b600067ffffffffffffffff8211156107605761075f6106ca565b5b610769826106b9565b9050602081019050919050565b82818337600083830152505050565b600061079861079384610745565b61072a565b9050828152602081018484840111156107b4576107b36106b4565b5b6107bf848285610776565b509392505050565b600082601f8301126107dc576107db6106af565b5b81356107ec848260208601610785565b91505092915050565b60006020828403121561080b5761080a6106a5565b5b600082013567ffffffffffffffff811115610829576108286106aa565b5b610835848285016107c7565b91505092915050565b6108478161062b565b811461085257600080fd5b50565b6000813590506108648161083e565b92915050565b6000602082840312156108805761087f6106a5565b5b600061088e84828501610855565b91505092915050565b60008115159050919050565b6108ac81610897565b82525050565b60006020820190506108c760008301846108a3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109075780820151818401526020810190506108ec565b60008484015250505050565b600061091e826108cd565b61092881856108d8565b93506109388185602086016108e9565b610941816106b9565b840191505092915050565b600060208201905081810360008301526109668184610913565b905092915050565b7f4e6f7420746865204f776e657200000000000000000000000000000000000000600082015250565b60006109a4600d836108d8565b91506109af8261096e565b602082019050919050565b600060208201905081810360008301526109d381610997565b9050919050565b600081905092915050565b50565b60006109f56000836109da565b9150610a00826109e5565b600082019050919050565b6000610a16826109e8565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610a566014836108d8565b9150610a6182610a20565b602082019050919050565b60006020820190508181036000830152610a8581610a49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ad357607f821691505b602082108103610ae657610ae5610a8c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610b4e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b11565b610b588683610b11565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b95610b90610b8b84610667565b610b70565b610667565b9050919050565b6000819050919050565b610baf83610b7a565b610bc3610bbb82610b9c565b848454610b1e565b825550505050565b600090565b610bd8610bcb565b610be3818484610ba6565b505050565b5b81811015610c0757610bfc600082610bd0565b600181019050610be9565b5050565b601f821115610c4c57610c1d81610aec565b610c2684610b01565b81016020851015610c35578190505b610c49610c4185610b01565b830182610be8565b50505b505050565b600082821c905092915050565b6000610c6f60001984600802610c51565b1980831691505092915050565b6000610c888383610c5e565b9150826002028217905092915050565b610ca1826108cd565b67ffffffffffffffff811115610cba57610cb96106ca565b5b610cc48254610abb565b610ccf828285610c0b565b600060209050601f831160018114610d025760008415610cf0578287015190505b610cfa8582610c7c565b865550610d62565b601f198416610d1086610aec565b60005b82811015610d3857848901518255600182019150602085019450602081019050610d13565b86831015610d555784890151610d51601f891682610c5e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da482610667565b9150610daf83610667565b9250828201905080821115610dc757610dc6610d6a565b5b92915050565b60006060820190508181036000830152610de78186610913565b9050610df660208301856108a3565b610e036040830184610671565b949350505050565b60006060820190508181036000830152610e258186610913565b90508181036020830152610e398185610913565b9050610e48604083018461063d565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a264697066735822122059cd7bdaf6babf6a0127063021ed067149abfc0c9e6b80e60f2d0012cf33d03964736f6c63430008170033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      YourContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YourContract__factory {
    return super.connect(runner) as YourContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): YourContract {
    return new Contract(address, _abi, runner) as unknown as YourContract;
  }
}
