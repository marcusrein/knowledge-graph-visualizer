/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ContributionTracker,
  ContributionTrackerInterface,
} from "../ContributionTracker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "ContributionReported",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "getPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "totalPoints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "points",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "contribPoints",
        type: "uint256",
      },
    ],
    name: "reportContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610392806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063358b816614610046578063ab06bea314610076578063ee204abb14610092575b600080fd5b610060600480360381019061005b919061022c565b6100c2565b60405161006d9190610272565b60405180910390f35b610090600480360381019061008b91906102b9565b6100da565b005b6100ac60048036038101906100a7919061022c565b610181565b6040516100b99190610272565b60405180910390f35b60006020528060005260406000206000915090505481565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101289190610328565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f8b7761c806276fa0dd460e3bc244c5a95f234ec6964498080b8d709c2c1915fe826040516101759190610272565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f9826101ce565b9050919050565b610209816101ee565b811461021457600080fd5b50565b60008135905061022681610200565b92915050565b600060208284031215610242576102416101c9565b5b600061025084828501610217565b91505092915050565b6000819050919050565b61026c81610259565b82525050565b60006020820190506102876000830184610263565b92915050565b61029681610259565b81146102a157600080fd5b50565b6000813590506102b38161028d565b92915050565b600080604083850312156102d0576102cf6101c9565b5b60006102de85828601610217565b92505060206102ef858286016102a4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061033382610259565b915061033e83610259565b9250828201905080821115610356576103556102f9565b5b9291505056fea2646970667358221220c7b0afddca1efc3c44db69abb5b39747bfebe0da56f7bb7ab6277c13f020a82a64736f6c63430008170033";

type ContributionTrackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContributionTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContributionTracker__factory extends ContractFactory {
  constructor(...args: ContributionTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContributionTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ContributionTracker__factory {
    return super.connect(runner) as ContributionTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContributionTrackerInterface {
    return new Interface(_abi) as ContributionTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContributionTracker {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ContributionTracker;
  }
}
